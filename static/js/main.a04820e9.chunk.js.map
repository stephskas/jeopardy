{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","question","onClick","e","setState","display_text","answer","console","log","state","CardList","results","map","result","index","setup","punchline","App","handleChange","fetch","then","response","json","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAGcA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,OAAf,UACE,4BAAID,EAAME,WAEV,wBACED,UAAU,UACVE,QAAS,SAACC,GACR,EAAKC,SAAS,CAAEC,aAAcN,EAAMO,SAAU,kBAC5CC,QAAQC,IAAI,EAAKC,WAJvB,wBCFQC,G,MAAW,SAACX,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMY,QAAQC,KAAI,SAACC,EAAQC,GAAT,OACjB,cAAC,EAAD,CAAkBb,SAAUY,EAAOE,MAAOT,OAASO,EAAOG,WAA/CF,UCoCFG,G,wDAtCb,aAAe,IAAD,8BACZ,gBAcFC,aAAe,SAACf,GACd,EAAKC,SAAS,CAACC,aAAc,cAd7B,EAAKI,MAAQ,CACXE,QAAS,GACTN,aAAc,IAJJ,E,qDAQd,WAAoB,IAAD,OACjBc,MAAM,oDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAE5BF,MAAK,SAACC,GAAD,OAAc,EAAKjB,SAAS,CAAEO,QAASU,S,oBAOjD,WAAU,IAAD,EAC2BE,KAAKd,MAA/BE,EADD,EACCA,QAASN,EADV,EACUA,aAEjB,OACE,sBAAKL,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,4CAEF,cAAC,EAAD,CAAUW,QAASA,EAASN,aAAcA,W,GA5BhCmB,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a04820e9.chunk.js","sourcesContent":[" import React from 'react';\n import './card.styles.css'\n\n export const Card = (props) => (\n   <div className=\"card\">\n     <p>{props.question}</p>\n     {/* <p dangerouslySetInnerHTML={{__html: props.question }} /> */}\n     <button\n       className=\"cardBtn\"\n       onClick={(e) => {\n         this.setState({ display_text: props.answer }, () => \n           console.log(this.state)\n         );\n       }}\n     >\n     ANSWER\n     </button>\n   </div>\n )","import React from 'react';\nimport { Card } from \"../card/card.component\"\nimport './card-list.styles.css'\n\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.results.map((result, index) => (\n      <Card key={index} question={result.setup} answer ={result.punchline}/>\n    ))}\n  </div>\n)\n\n\n","import React, { Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      results: [],\n      display_text: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch(\"https://official-joke-api.appspot.com/random_ten\")\n      .then((response) => response.json())\n      // .then((response) => console.log(response))\n      .then((response) => this.setState({ results: response }))\n  }\n\n  handleChange = (e) => {\n    this.setState({display_text: 'QUESTION'})\n  }\n\n  render() {\n    const { results, display_text } = this.state \n    // console.log(results)\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <h1>JEOPARDY</h1>\n        </header>\n        <CardList results={results} display_text={display_text} />\n         {/* <div className=\"card-list\">\n          {this.state.results.map((results) => (\n            <p key={results.correct_answer}>{results.question}</p>\n          ))}\n        </div>*/}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}